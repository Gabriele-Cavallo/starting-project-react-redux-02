{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment'){\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//     if(action.type === 'increase'){\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//     if(action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//     if(action.type === 'toggle'){\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//     return state;\n// };\n\n// const store = createStore(counterSlice.reducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["C:/Users/Utente/personal-code/react-udemy/starting-project-react-redux-02/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false;\r\n        },\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment'){\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type === 'increase'){\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type === 'decrement'){\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type === 'toggle'){\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter,\r\n//         }\r\n//     }\r\n//     return state;\r\n// };\r\n\r\n// const store = createStore(counterSlice.reducer);\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        auth: authSlice.reducer,\r\n    }\r\n});\r\n\r\nexport  const counterActions = counterSlice.actions;\r\nexport  const authActions = authSlice.actions;\r\nexport default store;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAI9D,MAAMC,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAE;MACTA,KAAK,CAACN,eAAe,GAAG,IAAI;IAChC,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAE;MACVA,KAAK,CAACN,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAE;IACLC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAC7BG,IAAI,EAAEX,SAAS,CAACQ;EACpB;AACJ,CAAC,CAAC;AAEF,OAAQ,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AACnD,OAAQ,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAAO;AAC7C,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}