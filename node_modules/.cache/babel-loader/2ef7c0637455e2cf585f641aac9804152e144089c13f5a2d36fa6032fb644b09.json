{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment'){\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//     if(action.type === 'increase'){\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//     if(action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//     if(action.type === 'toggle'){\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//     return state;\n// };\n\n// const store = createStore(counterSlice.reducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","increase","action","payload","decrement","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/Utente/personal-code/react-udemy/starting-project-react-redux-02/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true }\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter ++;\r\n        }, \r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        }, \r\n        decrement(state) {\r\n            state.counter --;\r\n        }, \r\n        toggle(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }, \r\n    }\r\n});\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false;\r\n        },\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment'){\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type === 'increase'){\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type === 'decrement'){\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type === 'toggle'){\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter,\r\n//         }\r\n//     }\r\n//     return state;\r\n// };\r\n\r\n// const store = createStore(counterSlice.reducer);\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        auth: authSlice.reducer,\r\n    }\r\n});\r\n\r\nexport  const counterActions = counterSlice.actions;\r\nexport  const authActions = authSlice.actions;\r\nexport default store;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAG;IACpB,CAAC;IACDQ,QAAQA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACpBF,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,SAASA,CAACJ,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAG;IACpB,CAAC;IACDY,MAAMA,CAACL,KAAK,EAAE;MACVA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC1BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACNW,KAAKA,CAACT,KAAK,EAAE;MACTA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAE;MACVA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IACLnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAC7BC,IAAI,EAAEL,SAAS,CAACI;EACpB;AACJ,CAAC,CAAC;AAEF,OAAQ,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AACnD,OAAQ,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAC7C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}